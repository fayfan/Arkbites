"""create operators table

Revision ID: 50d3fd50f54c
Revises: ffdc0a98111c
Create Date: 2025-02-19 12:51:52.222055

"""

from alembic import op
import sqlalchemy as sa

import os

environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = "50d3fd50f54c"
down_revision = "ffdc0a98111c"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "operators",
        sa.Column("display_number", sa.String(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("position", sa.String(length=10), nullable=False),
        sa.Column("tag_list", sa.String(length=255), nullable=True),
        sa.Column("item_obtain_approach", sa.String(length=255), nullable=True),
        sa.Column("rarity", sa.String(length=10), nullable=False),
        sa.Column("profession", sa.String(length=20), nullable=False),
        sa.Column("sub_profession_id", sa.String(length=20), nullable=False),
        sa.Column("level", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("display_number"),
        sa.UniqueConstraint("display_number"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user_operators",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("operator_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("phase", sa.String(length=10), nullable=True),
        sa.Column("level", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["operator_id"], ["operators.display_number"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "operator_id", name="_user_operator_uc"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(sa.Column("created_at", sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column("updated_at", sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_column("updated_at")
        batch_op.drop_column("created_at")

    op.drop_table("user_operators")
    op.drop_table("operators")
    # ### end Alembic commands ###
